# Deoplete
[[plugins]] # 補完
repo = 'Shougo/deoplete.nvim'
if = 'has("python3")'
depends = 'context_filetype.vim'
on_event = 'InsertEnter'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  " let g:deoplete#enable_ignore_case = 1
  " let g:deoplete#enable_smart_case = 1
  " let g:deoplete#auto_complete_delay = 0
  set completeopt=menuone

  " <tab>: completion.
  imap <silent><expr> <tab> pumvisible() ? "\<c-n>" : <sid>check_back_space() ? "\<tab>" : deoplete#mappings#manual_complete()
  function! s:check_back_space() abort
      let col = col('.') - 1
      return !col || getline('.')[col - 1]  =~ '\s'
  endfunction

  " <s-tab>: completion back.
  inoremap <expr><s-tab>  pumvisible() ? "\<c-p>" : "\<c-h>"

  " inoremap <silent> <CR> <C-r>=<SID>cr_close_popup()<CR>
  " function! s:cr_close_popup() abort
  "   return deoplete#close_popup() . "\<CR>"
  " endfunction
  let g:deoplete#sources = {}
  let g:deoplete#sources['javascript.jsx'] = ['file', 'ultisnips', 'ternjs']
  let g:deoplete#omni_patterns = {}
  let g:deoplete#omni_patterns.javascript = '[^. *\t]\.\w*'
  let g:deoplete#omni_patterns.ruby = '[^. *\t]\.\w*\|\h\w*::'
  let g:deoplete#omni#functions = {}
  let g:deoplete#omni#functions.javascript = [
        \ 'tern#Complete',
        \ 'jspc#omni'
        \]
  let g:deoplete#omni#functions.css = [
        \ 'csscomplete#CompleteCSS',
        \]
  autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
'''

[[plugins]]
repo = 'SirVer/ultisnips'

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'othree/jspc.vim'
depends = 'deoplete.nvim'

[[plugins]]
repo = 'marijnh/tern_for_vim'
build = 'npm install'

[[plugins]]
repo = 'carlitux/deoplete-ternjs'
build = 'npm install'
hook_add = '''
  let g:tern#command = ['tern']
  let g:tern#arguments = ['--persistent']
'''

[[plugins]]
repo = 'othree/csscomplete.vim'
depends = 'deoplete.nvim'

# Denite
[[plugins]]
repo = 'Shougo/denite.nvim'
if = 'has("python3")'
hook_add = '''
  autocmd FileType denite call s:denite_my_settings()
  function! s:denite_my_settings() abort
    nnoremap <silent><buffer><expr> <CR>
    \ denite#do_map('do_action')
    nnoremap <silent><buffer><expr> d
    \ denite#do_map('do_action', 'delete')
    nnoremap <silent><buffer><expr> p
    \ denite#do_map('do_action', 'preview')
    nnoremap <silent><buffer><expr> <Tab>
    \ denite#do_map('do_action', 'tabopen')
    nnoremap <silent><buffer><expr> v
    \ denite#do_map('do_action', 'vsplit')
    nnoremap <silent><buffer><expr> s
    \ denite#do_map('do_action', 'split')
    nnoremap <silent><buffer><expr> q
    \ denite#do_map('quit')
    nnoremap <silent><buffer><expr> <ESC>
    \ denite#do_map('quit')
    nnoremap <silent><buffer><expr> i
    \ denite#do_map('open_filter_buffer')
    nnoremap <silent><buffer><expr> <Space>
    \ denite#do_map('toggle_select').'j'
  endfunction

  nnoremap [unite]    <Nop>
  nmap     <Space>u [unite]

  nnoremap <silent> [unite]c       :<C-u>Denite file_mru -direction=topleft<CR>
  nnoremap <silent> [unite]u       :<C-u>Denite file_rec -direction=topleft<CR>
  nnoremap <silent> [unite]<Space> :<C-u>Denite file_rec -direction=topleft<CR>
  nnoremap <silent> [unite]g       :<C-u>Denite grep -buffer-name=search-buffer-denite<CR>
  nnoremap <silent> ,g             :<C-u>Denite grep -buffer-name=search-buffer-denite -direction=topleft<CR>
  nnoremap <silent> ,cg            :<C-u>DeniteCursorWord grep -buffer-name=search-buffer-denite -direction=topleft<CR>
  nnoremap <silent> ,r             :<C-u>Denite -resume -buffer-name=search-buffer-denite<CR>
  nnoremap <silent> [unite]r       :<C-u>Denite -resume -direction=topleft<CR>
  nnoremap <silent> [unite]h       :<C-u>Unite help<CR>
'''
hook_post_source = '''
  call denite#custom#source('file_rec', 'matchers', ['matcher_ignore_globs', 'matcher_regexp'])
  call denite#custom#filter('matcher_ignore_globs', 'ignore_globs',
        \ [
        \ '.git/', 'node_modules/',
        \ 'img/', 'images/', '*.tmp', '*.min.*', 'fonts/'
        \])
  call denite#custom#source('file_rec', 'sorters', ['sorter_sublime'])
  if executable('pt')
    call denite#custom#var('file_rec', 'command', ['pt', '--follow', '--nocolor', '--nogroup', '--hidden', '-g', ''])
  endif
  " call denite#custom#source('grep', 'sorters', ['sorter_sublime'])
  call denite#custom#var('grep', 'command', ['ag'])
  call denite#custom#var('grep', 'default_opts', ['--nogroup', '--nocolor', '--smart-case', '--hidden'])
  call denite#custom#var('grep', 'recursive_opts', [])
  call denite#custom#var('grep', 'pattern_opt', [])
  call denite#custom#var('grep', 'separator', ['--'])
  call denite#custom#var('grep', 'final_opts', [])
'''

[[plugins]]
repo = 'Shougo/neomru.vim'
depends = 'denite.nvim'
on_path = '.*'

